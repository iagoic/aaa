#version 400 core

layout (triangles, equal_spacing, cw) in;

in float y;
in vec3 tcPos[];

out float y;
out vec3 tePatchDistance;

//out float p1;

//out vec4 color;

uniform mat4 MVP;

void main(){
    //float u = gl_TessCoord.x;
    //float omu = 1 - u;
    //float v = gl_TessCoord.y;
    //float omv = 1 - v;
    //color = gl_TessCoord;
    //gl_Position =
    //      omu * omv * gl_in[0].gl_Position +
    //        u * omv * gl_in[1].gl_Position +
    //        u *  v  * gl_in[2].gl_Position +
    //     omu *  v  * gl_in[3].gl_Position;
    tePatchDistance = gl_TessCoord;

    vec3 p0 = gl_TessCoord.x * tcPos[0];
    vec3 p1 = gl_TessCoord.y * tcPos[1];
    vec3 p2 = gl_TessCoord.z * tcPos[2];

    vec3 tePosit = normalize(p0 + p1 + p2);
    gl_Position = MVP * vec4(tePosition, 1);

}
